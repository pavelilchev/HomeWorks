const appId = 'kid_HyaHpWMzg';
const appSecret = 'dc432eedfa044acc9cdd43ffe463619c';
const baseUrl = 'https://baas.kinvey.com/';

function getAuthorization(auth) {
    let authorization = {};
    if (auth === 'basic') {
        authorization = {'Authorization': "Basic " + btoa(appId + ":" + appSecret)};
    } else {
        authorization = {'Authorization': "Kinvey " + sessionStorage.getItem('token')};
    }

    return authorization;
}

function getRequest(method, module, collection, data, auth, id) {
    let authorization = getAuthorization(auth);
    let request = {
        method: method,
        url: baseUrl + module + '/' + appId + '/' + collection,
        headers: authorization
    };

    if (data) {
        request.data = data;
    }

    if (id) {
        request.url = request.url + '/' + id;
    }

    return request;
}

function get(module, collection, auth) {
    let request = getRequest('GET', module, collection, '', auth);
    return $.ajax(request);
}

function post(module, collection, data, auth) {
    let request = getRequest('POST', module, collection, data, auth);
    return $.ajax(request);
}

function put(module, collection, id, data) {
    let request = getRequest('PUT', module, collection, data, 'kinvey', id);
    return $.ajax(request);
}

function del(module, collection, id) {
    let request = getRequest('Delete', module, collection, '', 'kinvey', id);
    return $.ajax(request);
}

function register() {
    let data = {"username": "paco", "password": "paco"};
    post('user', '', data, 'basic')
        .then(saveUser)
        .catch(logError);
}

function login() {
    let data = {"username": "paco", "password": "paco"};
    post('user', 'login', data, 'basic')
        .then(saveUser)
        .catch(logError);
}

function logout() {
    post('user', '_logout', '', 'kinvey')
        .then(function () {
            sessionStorage.clear();
        })
        .catch(logError)
}

function listAll() {
    get('appdata', 'Town', 'kinvey')
        .then(showData)
        .catch(logError);
}

function create() {
    let name = $('#name').val();
    let country = $('#country').val();
    let data = {'name': name, 'country': country}
    post('appdata', 'Town', data, 'kinvey')
        .then(listAll)
        .catch(logError);
}

function edit() {
    let id = $(this).parent().prop('id');
    let name = $('#name').val();
    let country = $('#country').val();
    data = {'name': name, 'country': country};
    put('appdata', 'Town', id, data)
        .then(listAll)
        .catch(logError)
}

function deleteEntry() {
    let id = $(this).parent().prop('id');
    del('appdata', 'Town', id)
        .then(listAll)
        .catch(logError)
}

function saveUser(successInfo) {
    sessionStorage.setItem('id', successInfo._id);
    sessionStorage.setItem('username', successInfo.username);
    sessionStorage.setItem('token', successInfo._kmd.authtoken);
}

function logError(error) {
    console.dir(error);
}

function showData(data) {
    data = data.sort(function (a, b) {
        return a.name.localeCompare(b.name);
    });

    let keys = Object.keys(data);

    let ul = $('<ul>');
    for (let key in keys) {
        let town = data[key];
        let li = $(`<li id=${town._id}></li>`)
        li.append(`<span>name: ${town.name}, country: ${town.country}</span>`);
        let editBtn = $(`<button>Edit</button>`);
        editBtn.click(edit);
        let delBtn = $(`<button>Delete</button>`);
        delBtn.click(deleteEntry);
        li.append(editBtn);
        li.append(delBtn);
        ul.append(li);
    }

    $('#app').empty();
    $('#app').append(ul);
}
